plugins {
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'java'
    id 'jacoco'
}

project.ext {
    publishRepo = "https://maven.pkg.github.com/reportportal/plugin-bts-rally"
    dependencyRepos = ["plugin-api", "commons-bom"]
    releaseMode = project.hasProperty("releaseMode")
    pluginID = "rally"
    pluginsDir = "$buildDir/plugins"
}

def scriptsUrl = 'https://raw.githubusercontent.com/reportportal/gradle-scripts/' +
        (releaseMode ? getProperty('scripts.version') : 'develop')

apply from: scriptsUrl + '/release-fat.gradle'
apply from: scriptsUrl + '/signing.gradle'
apply from: scriptsUrl + '/build-quality.gradle'


sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral { url "https://repo1.maven.org/maven2" }

    if (!releaseMode) {
        maven { url 'https://jitpack.io' }
    }
}

dependencyManagement {
    imports {
        mavenBom(releaseMode ? 'com.epam.reportportal:commons-bom:' + getProperty('bom.version') : 'com.epam.reportportal:commons-bom:5.11.2')
    }
}

dependencies {
    if (releaseMode) {
        implementation 'com.epam.reportportal:commons-dao'
        implementation 'com.epam.reportportal:plugin-api'
        annotationProcessor 'com.epam.reportportal:plugin-api'
    } else {
        implementation 'com.github.reportportal:commons-dao:0703b75'
        implementation 'com.github.reportportal:plugin-api:3ecb915657'
        annotationProcessor 'com.github.reportportal:plugin-api:3ecb915657'
    }
    implementation 'org.hibernate:hibernate-core:5.6.15.Final'

    compile 'com.rallydev.rest:rally-rest-api:2.2.1'
    compile 'net.oauth.core:oauth:20090617'
    compile 'net.oauth.core:oauth-httpclient4:20090913'
    compile 'org.apache.tika:tika-core:1.14'
    compile 'javax.inject:javax.inject:1'
}

wrapper {
    gradleVersion = '5.4.1'
}

generatePomFileForShadowPublication { pom.packaging = "jar" }

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(' '),
                "Plugin-Id": "${pluginID}",
                "Plugin-Version": "${project.version}",
                "Plugin-Provider": "Andrei Varabyeu",
                "Plugin-Class": "com.epam.reportportal.extension.bugtracking.rally.RallyStrategyPlugin",
//                "Plugin-Dependencies": ""
        )
    }
}

shadowJar {
    archiveClassifier.set(null)
    zip64 true
    dependencies {
        include(dependency('com.google.guava:guava'))
        include(dependency('com.rallydev.rest:rally-rest-api'))
        include(dependency('com.google.code.gson:gson'))
    }
}

task plugin(type: Jar) {
    baseName = "plugin-${pluginID}"
    into('classes') {
        with jar
    }
    into('lib') {
        from configurations.compile
    }
    extension('zip')
}

task assemblePlugin(type: Copy) {
    from plugin
    into pluginsDir
}

task assemblePlugins(type: Copy) {
    dependsOn subprojects.assemblePlugin
}
