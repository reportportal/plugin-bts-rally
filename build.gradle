plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id 'java'
    id 'jacoco'
}

project.ext {
    releaseMode = project.hasProperty("releaseMode")
    pluginID = "rally"
    pluginsDir = "$buildDir/plugins"
}

def branch = releaseMode ? '5.1.0' : 'develop'
apply from: "https://raw.githubusercontent.com/reportportal/gradle-scripts/$branch/build-quality.gradle"
apply from: "https://raw.githubusercontent.com/reportportal/gradle-scripts/$branch/release-fat.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    releaseMode ? maven { url "http://dl.bintray.com/epam/reportportal" } : maven { url 'https://jitpack.io' }
}

dependencyManagement {
    imports {
        mavenBom(releaseMode ? 'com.epam.reportportal:commons-bom:5.0.0' : 'com.github.reportportal:commons-bom:4b7ed8a')
    }
}

dependencies {
    if (releaseMode) {
        implementation 'com.epam.reportportal:plugin-api'
        annotationProcessor 'com.epam.reportportal:plugin-api'

    } else {
        implementation 'com.github.reportportal:plugin-api:8fe626d'
        annotationProcessor 'com.github.reportportal:plugin-api:8fe626d'
    }

    compile 'com.rallydev.rest:rally-rest-api:2.2.1'
    compile 'net.oauth.core:oauth:20090617'
    compile 'net.oauth.core:oauth-httpclient4:20090913'
    compile 'org.apache.tika:tika-core:1.14'
    compile 'javax.inject:javax.inject:1'
}

wrapper {
    gradleVersion = '6.0'
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(' '),
                "Plugin-Id": "${pluginID}",
                "Plugin-Version": "${project.version}",
                "Plugin-Provider": "Andrei Varabyeu",
                "Plugin-Class": "com.epam.reportportal.extension.bugtracking.rally.RallyStrategyPlugin",
//                "Plugin-Dependencies": ""
        )
    }
}

shadowJar {
    zip64 true
    dependencies {
        include(dependency('com.google.guava:guava'))
        include(dependency('com.rallydev.rest:rally-rest-api'))
        include(dependency('com.google.code.gson:gson'))
    }
}

task plugin(type: Jar) {
    baseName = "plugin-${pluginID}"
    into('classes') {
        with jar
    }
    into('lib') {
        from configurations.compile
    }
    extension('zip')
}

task assemblePlugin(type: Copy) {
    from plugin
    into pluginsDir
}

task assemblePlugins(type: Copy) {
    dependsOn subprojects.assemblePlugin
}
